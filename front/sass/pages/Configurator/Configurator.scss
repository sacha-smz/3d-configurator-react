@use "sass:map";

@use "../../utils/variables" as v;
@use "../../utils/functions" as f;
@use "../../utils/mixins" as m;

.configurator {
  flex-grow: 2;
  display: grid;
  grid-template-columns: 2fr 1fr;

  &__stage {
    position: relative;
    z-index: 1;
    grid-area: 1 / 1 / 1 / 1;
    display: flex;
    background-color: f.getColor("main", "gamma");

    canvas {
      margin: auto;
      border-radius: 1.6rem;
      font-size: 1rem;
      @include m.box-shadow(3);

      &:focus {
        outline: none;
      }
    }
  }

  &__model-gallery {
    position: relative;
    width: 100%;
    margin: auto auto 1.4rem;
    pointer-events: none;
    z-index: 2;
    grid-area: 1 / 1 / 1 / 1;

    display: flex;
    justify-content: center;

    .round {
      width: 11%;

      & ~ .round {
        margin-left: 2%;
      }
    }

    label {
      pointer-events: auto;
      background-color: f.getColor("main", "delta");
      @include m.box-shadow(0.75);
      opacity: 0.9;
      transform: scale(1);
      transition: all 100ms 70ms;

      img {
        max-width: 100%;
      }

      &:hover {
        transform: scale(1.15);
        opacity: 1;
      }

      &:active {
        transform: scale(0.98);
        transition: all 10ms 0ms;
      }
    }

    input[type="radio"] {
      display: none;

      &:checked + label {
        transform: scale(1.15);
        opacity: 1;
        border: 0.24rem solid f.getDarkColor("main", "gamma");
      }
    }
  }

  &__control-panel {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: f.getColor("main", "delta");
    height: calc(100vh - #{v.$headerHeight});
    overflow-y: auto;

    button {
      position: relative;
      background-color: f.getColor("main", "beta");
      font-size: 1.15rem;
      font-weight: bold;
      padding: 0.8rem 2rem;
      text-transform: uppercase;
      border-radius: 1.6rem;
      flex-shrink: 0;
      overflow: hidden;
      @include m.box-shadow;

      transform: scale(1);
      color: f.getDarkColor("main", "delta");
      transition: all 500ms;

      span {
        position: relative;
        z-index: 2;
      }

      &:active {
        &::after {
          background-color: f.getColor("main", "delta");
        }
      }

      &:focus {
        outline: none;
      }

      &:hover {
        color: f.getColor("main", "alpha");
        transform: scale(1.15);

        &::after {
          opacity: 1;
        }
      }

      &::after {
        content: "";
        position: absolute;
        z-index: 1;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: f.getDarkColor("main", "delta");

        opacity: 0;
        transition: opacity 500ms;
      }
    }
  }
}
